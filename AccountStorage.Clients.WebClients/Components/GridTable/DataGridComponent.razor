@typeparam TItem

<table class="table table-hover">
    <thead>
        <tr>
            @if (Columns is null || Columns.Count <= 0)
            {
                
            }
            else
            {
                foreach (var column in Columns)
                {
                    var cssClass = "table-dark";

                    cssClass += (column.Alignment != Alignment.NotSet) ? " align-" + column.Alignment.ToString().ToLower() : "";

                    <th scope="row" class="@cssClass">@column.Caption</th>


                @*    if (column.Alignment != Alignment.NotSet)
                    {
                        <th class="align-@column.Alignment.ToString().ToLower() table-info">@column.Caption</th>
                    }
                    else
                    {
                        <th scope="row" class="tabel-info">@column.Caption</th>
                    }*@
                }
            }
        </tr>
    </thead>
    <tbody>
        @if (DataItems is not null)
        {
            @foreach (var item in DataItems)
            {
                <tr>
                    @foreach (var column in Columns)
                    {
                        string value = typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString();
                        var cssClass = "table-info";

                        if (!string.IsNullOrEmpty(column.Format) || column.DataType != DataType.NotSet)
                        {
                            switch (column.DataType)
                            {
                                case DataType.Date:
                                case DataType.DateTime:
                                    value = DateTime.Parse(typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString()).ToString(column.Format);
                                    break;
                                case DataType.Boolean:
                                    value = Boolean.Parse(typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString()).ToString();
                                    break;
                                case DataType.Currency:
                                    value = Math.Round(Double.Parse(typeof(TItem).GetProperty(column.DataField).GetValue(item).ToString()), 2).ToString("vnd");
                                    break;
                            }
                        }

                        if (column.Alignment != Alignment.NotSet)
                        {
                            <td class="@cssClass" align="@column.Alignment.ToString().ToLower()">@value</td>
                        }
                        else
                        {
                            <td class="@cssClass">@value</td>
                        }
                    }
                </tr> 
            
            }
        }
    </tbody>

</table>

@code {

    [Parameter]
    public ICollection<TItem> DataItems { get; set; }

    [Parameter]
    public List<ColumnDefinition> Columns { get; set; }

}
